diff -up xbmc-20.2-Nexus/xbmc/FileItem.cpp.omv~ xbmc-20.2-Nexus/xbmc/FileItem.cpp
--- xbmc-20.2-Nexus/xbmc/FileItem.cpp.omv~	2023-08-16 03:49:03.713491963 +0200
+++ xbmc-20.2-Nexus/xbmc/FileItem.cpp	2023-08-16 03:51:13.288720850 +0200
@@ -3090,7 +3090,7 @@ bool CFileItemList::Load(int windowID)
       CArchive ar(&file, CArchive::load);
       ar >> *this;
       CLog::Log(LOGDEBUG, "Loading items: {}, directory: {} sort method: {}, ascending: {}", Size(),
-                CURL::GetRedacted(GetPath()), m_sortDescription.sortBy,
+                CURL::GetRedacted(GetPath()), static_cast<int>(m_sortDescription.sortBy),
                 m_sortDescription.sortOrder == SortOrderAscending ? "true" : "false");
       ar.Close();
       file.Close();
@@ -3128,7 +3128,7 @@ bool CFileItemList::Save(int windowID)
     CArchive ar(&file, CArchive::store);
     ar << *this;
     CLog::Log(LOGDEBUG, "  -- items: {}, sort method: {}, ascending: {}", iSize,
-              m_sortDescription.sortBy,
+              static_cast<int>(m_sortDescription.sortBy),
               m_sortDescription.sortOrder == SortOrderAscending ? "true" : "false");
     ar.Close();
     file.Close();
diff -up xbmc-20.2-Nexus/xbmc/addons/AddonStatusHandler.cpp.omv~ xbmc-20.2-Nexus/xbmc/addons/AddonStatusHandler.cpp
--- xbmc-20.2-Nexus/xbmc/addons/AddonStatusHandler.cpp.omv~	2023-08-16 03:49:50.313945131 +0200
+++ xbmc-20.2-Nexus/xbmc/addons/AddonStatusHandler.cpp	2023-08-16 03:50:00.536042772 +0200
@@ -56,7 +56,7 @@ CAddonStatusHandler::CAddonStatusHandler
   CLog::Log(LOGINFO,
             "Called Add-on status handler for '{}' of clientName:{}, clientID:{}, instanceID:{} "
             "(same Thread={})",
-            status, m_addon->Name(), m_addon->ID(), m_instanceId, sameThread ? "yes" : "no");
+            static_cast<int>(status), m_addon->Name(), m_addon->ID(), m_instanceId, sameThread ? "yes" : "no");
 
   m_status = status;
 
diff -up xbmc-20.2-Nexus/xbmc/addons/binary-addons/AddonDll.cpp.omv~ xbmc-20.2-Nexus/xbmc/addons/binary-addons/AddonDll.cpp
--- xbmc-20.2-Nexus/xbmc/addons/binary-addons/AddonDll.cpp.omv~	2023-08-16 03:55:34.419958388 +0200
+++ xbmc-20.2-Nexus/xbmc/addons/binary-addons/AddonDll.cpp	2023-08-16 03:55:42.018019821 +0200
@@ -207,7 +207,7 @@ ADDON_STATUS CAddonDll::Create(KODI_ADDO
   { // Addon failed initialization
     CLog::Log(LOGERROR,
               "ADDON: Dll {} - Client returned bad status ({}) from Create and is not usable",
-              Name(), status);
+              Name(), static_cast<int>(status));
 
     // @todo currently a copy and paste from other function and becomes improved.
     std::string heading =
diff -up xbmc-20.2-Nexus/xbmc/application/Application.cpp.omv~ xbmc-20.2-Nexus/xbmc/application/Application.cpp
--- xbmc-20.2-Nexus/xbmc/application/Application.cpp.omv~	2023-08-16 03:51:34.635914572 +0200
+++ xbmc-20.2-Nexus/xbmc/application/Application.cpp	2023-08-16 03:52:08.012213072 +0200
@@ -527,10 +527,10 @@ bool CApplication::CreateGUI()
   bool sav_res = false;
   CDisplaySettings::GetInstance().SetCurrentResolution(CDisplaySettings::GetInstance().GetDisplayResolution());
   CLog::Log(LOGINFO, "Checking resolution {}",
-            CDisplaySettings::GetInstance().GetCurrentResolution());
+            static_cast<int>(CDisplaySettings::GetInstance().GetCurrentResolution()));
   if (!CServiceBroker::GetWinSystem()->GetGfxContext().IsValidResolution(CDisplaySettings::GetInstance().GetCurrentResolution()))
   {
-    CLog::Log(LOGINFO, "Setting safe mode {}", RES_DESKTOP);
+    CLog::Log(LOGINFO, "Setting safe mode {}", static_cast<int>(RES_DESKTOP));
     // defer saving resolution after window was created
     CDisplaySettings::GetInstance().SetCurrentResolution(RES_DESKTOP);
     sav_res = true;
diff -up xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/AudioSinkAE.cpp.omv~ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/AudioSinkAE.cpp
--- xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/AudioSinkAE.cpp.omv~	2023-08-16 04:13:00.364849885 +0200
+++ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/AudioSinkAE.cpp	2023-08-16 04:18:39.161466911 +0200
@@ -41,7 +41,7 @@ CAudioSinkAE::~CAudioSinkAE()
 bool CAudioSinkAE::Create(const DVDAudioFrame &audioframe, AVCodecID codec, bool needresampler)
 {
   CLog::Log(LOGINFO, "Creating audio stream (codec id: {}, channels: {}, sample rate: {}, {})",
-            codec, audioframe.format.m_channelLayout.Count(), audioframe.format.m_sampleRate,
+            static_cast<int>(codec), audioframe.format.m_channelLayout.Count(), audioframe.format.m_sampleRate,
             audioframe.passthrough ? "pass-through" : "no pass-through");
 
   // if passthrough isset do something else
diff -up xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/DVDCodecs/Audio/DVDAudioCodecFFmpeg.cpp.omv~ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/DVDCodecs/Audio/DVDAudioCodecFFmpeg.cpp
--- xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/DVDCodecs/Audio/DVDAudioCodecFFmpeg.cpp.omv~	2023-08-16 04:17:17.016234800 +0200
+++ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/DVDCodecs/Audio/DVDAudioCodecFFmpeg.cpp	2023-08-16 04:17:24.770354066 +0200
@@ -60,7 +60,7 @@ bool CDVDAudioCodecFFmpeg::Open(CDVDStre
 
   if (!pCodec)
   {
-    CLog::Log(LOGDEBUG, "CDVDAudioCodecFFmpeg::Open() Unable to find codec {}", hints.codec);
+    CLog::Log(LOGDEBUG, "CDVDAudioCodecFFmpeg::Open() Unable to find codec {}", static_cast<int>(hints.codec));
     return false;
   }
 
diff -up xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/DVDCodecs/Overlay/DVDOverlayCodecFFmpeg.cpp.omv~ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/DVDCodecs/Overlay/DVDOverlayCodecFFmpeg.cpp
--- xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/DVDCodecs/Overlay/DVDOverlayCodecFFmpeg.cpp.omv~	2023-08-16 04:17:48.679717802 +0200
+++ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/DVDCodecs/Overlay/DVDOverlayCodecFFmpeg.cpp	2023-08-16 04:17:57.960857409 +0200
@@ -42,7 +42,7 @@ bool CDVDOverlayCodecFFmpeg::Open(CDVDSt
   AVCodec* pCodec = avcodec_find_decoder(hints.codec);
   if (!pCodec)
   {
-    CLog::Log(LOGDEBUG, "{} - Unable to find codec {}", __FUNCTION__, hints.codec);
+    CLog::Log(LOGDEBUG, "{} - Unable to find codec {}", __FUNCTION__, static_cast<int>(hints.codec));
     return false;
   }
 
diff -up xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecDRMPRIME.cpp.omv~ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecDRMPRIME.cpp
--- xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecDRMPRIME.cpp.omv~	2023-08-16 04:07:49.764860862 +0200
+++ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecDRMPRIME.cpp	2023-08-16 04:07:57.920077734 +0200
@@ -250,7 +250,7 @@ bool CDVDVideoCodecDRMPRIME::Open(CDVDSt
   if (!pCodec)
   {
     CLog::Log(LOGDEBUG, "CDVDVideoCodecDRMPRIME::{} - unable to find decoder for codec {}",
-              __FUNCTION__, hints.codec);
+              __FUNCTION__, static_cast<int>(hints.codec));
     return false;
   }
 
diff -up xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecFFmpeg.cpp.omv~ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecFFmpeg.cpp
--- xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecFFmpeg.cpp.omv~	2023-08-16 04:05:37.309454770 +0200
+++ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecFFmpeg.cpp	2023-08-16 04:08:40.005163323 +0200
@@ -351,7 +351,7 @@ bool CDVDVideoCodecFFmpeg::Open(CDVDStre
 
   if(pCodec == NULL)
   {
-    CLog::Log(LOGDEBUG, "CDVDVideoCodecFFmpeg::Open() Unable to find codec {}", hints.codec);
+    CLog::Log(LOGDEBUG, "CDVDVideoCodecFFmpeg::Open() Unable to find codec {}", static_cast<int>(hints.codec));
     return false;
   }
 
@@ -1160,7 +1160,7 @@ int CDVDVideoCodecFFmpeg::FilterOpen(con
 
   std::string args = StringUtils::Format(
       "{}:{}:{}:{}:{}:{}:{}", m_pCodecContext->width, m_pCodecContext->height,
-      m_pCodecContext->pix_fmt, m_pCodecContext->time_base.num ? m_pCodecContext->time_base.num : 1,
+      static_cast<int>(m_pCodecContext->pix_fmt), m_pCodecContext->time_base.num ? m_pCodecContext->time_base.num : 1,
       m_pCodecContext->time_base.num ? m_pCodecContext->time_base.den : 1,
       m_pCodecContext->sample_aspect_ratio.num != 0 ? m_pCodecContext->sample_aspect_ratio.num : 1,
       m_pCodecContext->sample_aspect_ratio.num != 0 ? m_pCodecContext->sample_aspect_ratio.den : 1);
diff -up xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/DVDCodecs/Video/VDPAU.cpp.omv~ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/DVDCodecs/Video/VDPAU.cpp
--- xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/DVDCodecs/Video/VDPAU.cpp.omv~	2023-08-16 04:04:00.827772353 +0200
+++ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/DVDCodecs/Video/VDPAU.cpp	2023-08-16 04:06:59.801031281 +0200
@@ -207,10 +207,10 @@ bool CVDPAUContext::CreateContext()
                                    &m_vdpDevice,
                                    &m_vdpProcs.vdp_get_proc_address);
 
-  CLog::Log(LOGINFO, "vdp_device = {:#08x} vdp_st = {:#08x}", m_vdpDevice, vdp_st);
+  CLog::Log(LOGINFO, "vdp_device = {:#08x} vdp_st = {:#08x}", static_cast<int>(m_vdpDevice), static_cast<int>(vdp_st));
   if (vdp_st != VDP_STATUS_OK)
   {
-    CLog::Log(LOGERROR, "(VDPAU) unable to init VDPAU - vdp_st = 0x{:x}.  Falling back.", vdp_st);
+    CLog::Log(LOGERROR, "(VDPAU) unable to init VDPAU - vdp_st = 0x{:x}.  Falling back.", static_cast<int>(vdp_st));
     m_vdpDevice = VDP_INVALID_HANDLE;
     return false;
   }
@@ -588,7 +588,7 @@ bool CDecoder::Open(AVCodecContext* avct
       if (CheckStatus(vdp_st, __LINE__))
       {
         CLog::Log(LOGERROR, "VDPAU::Open: error {}({}) checking for decoder support",
-                  m_vdpauConfig.context->GetProcs().vdp_get_error_string(vdp_st), vdp_st);
+                  m_vdpauConfig.context->GetProcs().vdp_get_error_string(vdp_st), static_cast<int>(vdp_st));
         return false;
       }
 
@@ -611,7 +611,7 @@ bool CDecoder::Open(AVCodecContext* avct
       if (CheckStatus(vdp_st, __LINE__))
       {
         CLog::Log(LOGERROR, "VDPAU::Open: error: {}({}) checking for decoder support",
-                  m_vdpauConfig.context->GetProcs().vdp_get_error_string(vdp_st), vdp_st);
+                  m_vdpauConfig.context->GetProcs().vdp_get_error_string(vdp_st), static_cast<int>(vdp_st));
         return false;
       }
 
@@ -1312,7 +1312,7 @@ bool CDecoder::CheckStatus(VdpStatus vdp
   if (vdp_st != VDP_STATUS_OK)
   {
     CLog::Log(LOGERROR, " (VDPAU) Error: {}({}) at {}:{}",
-              m_vdpauConfig.context->GetProcs().vdp_get_error_string(vdp_st), vdp_st, __FILE__,
+              m_vdpauConfig.context->GetProcs().vdp_get_error_string(vdp_st), static_cast<int>(vdp_st), __FILE__,
               line);
 
     m_ErrorCount++;
@@ -2820,7 +2820,7 @@ bool CMixer::CheckStatus(VdpStatus vdp_s
   if (vdp_st != VDP_STATUS_OK)
   {
     CLog::Log(LOGERROR, " (VDPAU) Error: {}({}) at {}:{}",
-              m_config.context->GetProcs().vdp_get_error_string(vdp_st), vdp_st, __FILE__, line);
+              m_config.context->GetProcs().vdp_get_error_string(vdp_st), static_cast<int>(vdp_st), __FILE__, line);
     m_vdpError = true;
     return true;
   }
@@ -3456,7 +3456,7 @@ bool COutput::CheckStatus(VdpStatus vdp_
   if (vdp_st != VDP_STATUS_OK)
   {
     CLog::Log(LOGERROR, " (VDPAU) Error: {}({}) at {}:{}",
-              m_config.context->GetProcs().vdp_get_error_string(vdp_st), vdp_st, __FILE__, line);
+              m_config.context->GetProcs().vdp_get_error_string(vdp_st), static_cast<int>(vdp_st), __FILE__, line);
     m_vdpError = true;
     return true;
   }
diff -up xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxClient.cpp.omv~ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxClient.cpp
--- xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxClient.cpp.omv~	2023-08-16 04:16:56.494915976 +0200
+++ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxClient.cpp	2023-08-16 04:17:04.616042707 +0200
@@ -620,7 +620,7 @@ void CDVDDemuxClient::SetStreamProps(CDe
   toStream->name = stream->name;
 
   CLog::Log(LOGDEBUG, "CDVDDemuxClient::RequestStream(): added/updated stream {} with codec_id {}",
-            toStream->uniqueId, toStream->codec);
+            toStream->uniqueId, static_cast<int>(toStream->codec));
 }
 
 std::shared_ptr<CDemuxStream> CDVDDemuxClient::GetStreamInternal(int iStreamId)
diff -up xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoPlayer.cpp.omv~ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoPlayer.cpp
--- xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoPlayer.cpp.omv~	2023-08-16 03:59:13.865671715 +0200
+++ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoPlayer.cpp	2023-08-16 04:02:23.601074041 +0200
@@ -2309,7 +2309,7 @@ bool CVideoPlayer::CheckContinuity(CCurr
   {
     CLog::Log(LOGDEBUG,
               "CVideoPlayer::CheckContinuity - resync forward :{}, prev:{:f}, curr:{:f}, diff:{:f}",
-              current.type, current.dts, pPacket->dts, pPacket->dts - maxdts);
+              static_cast<int>(current.type), current.dts, pPacket->dts, pPacket->dts - maxdts);
     correction = pPacket->dts - maxdts;
   }
 
@@ -2319,14 +2319,14 @@ bool CVideoPlayer::CheckContinuity(CCurr
     CLog::Log(
         LOGDEBUG,
         "CVideoPlayer::CheckContinuity - resync backward :{}, prev:{:f}, curr:{:f}, diff:{:f}",
-        current.type, current.dts, pPacket->dts, pPacket->dts - current.dts);
+        static_cast<int>(current.type), current.dts, pPacket->dts, pPacket->dts - current.dts);
     correction = pPacket->dts - current.dts_end();
   }
   else if(pPacket->dts < current.dts)
   {
     CLog::Log(LOGDEBUG,
               "CVideoPlayer::CheckContinuity - wrapback :{}, prev:{:f}, curr:{:f}, diff:{:f}",
-              current.type, current.dts, pPacket->dts, pPacket->dts - current.dts);
+              static_cast<int>(current.type), current.dts, pPacket->dts, pPacket->dts - current.dts);
   }
 
   double lastdts = pPacket->dts;
@@ -3028,7 +3028,7 @@ void CVideoPlayer::HandleMessages()
         m_CurrentVideo.syncState = msg.syncState;
       }
       CLog::Log(LOGDEBUG, "CVideoPlayer::HandleMessages - player {} reported state: {}", msg.player,
-                msg.syncState);
+                static_cast<int>(msg.syncState));
     }
     else if (pMsg->IsType(CDVDMsg::SUBTITLE_ADDFILE))
     {
@@ -3078,7 +3078,7 @@ void CVideoPlayer::SetCaching(ECacheStat
   if(m_caching == state)
     return;
 
-  CLog::Log(LOGDEBUG, "CVideoPlayer::SetCaching - caching state {}", state);
+  CLog::Log(LOGDEBUG, "CVideoPlayer::SetCaching - caching state {}", static_cast<int>(state));
   if (state == CACHESTATE_FULL ||
       state == CACHESTATE_INIT)
   {
diff -up xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoPlayerAudio.cpp.omv~ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoPlayerAudio.cpp
--- xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoPlayerAudio.cpp.omv~	2023-08-16 04:10:04.448185987 +0200
+++ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoPlayerAudio.cpp	2023-08-16 04:11:44.871357984 +0200
@@ -76,7 +76,7 @@ CVideoPlayerAudio::~CVideoPlayerAudio()
 
 bool CVideoPlayerAudio::OpenStream(CDVDStreamInfo hints)
 {
-  CLog::Log(LOGINFO, "Finding audio codec for: {}", hints.codec);
+  CLog::Log(LOGINFO, "Finding audio codec for: {}", static_cast<int>(hints.codec));
   bool allowpassthrough = !CServiceBroker::GetSettingsComponent()->GetSettings()->GetBool(CSettings::SETTING_VIDEOPLAYER_USEDISPLAYASCLOCK);
   if (m_processInfo.IsRealtimeStream())
     allowpassthrough = false;
@@ -276,7 +276,7 @@ void CVideoPlayerAudio::Process()
     if (MSGQ_IS_ERROR(ret))
     {
       if (!m_messageQueue.ReceivedAbortRequest())
-        CLog::Log(LOGERROR, "MSGQ_IS_ERROR returned true ({})", ret);
+        CLog::Log(LOGERROR, "MSGQ_IS_ERROR returned true ({})", static_cast<int>(ret));
 
       break;
     }
diff -up xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoPlayerAudioID3.cpp.omv~ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoPlayerAudioID3.cpp
--- xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoPlayerAudioID3.cpp.omv~	2023-08-16 04:03:44.038652587 +0200
+++ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoPlayerAudioID3.cpp	2023-08-16 04:03:51.278704274 +0200
@@ -132,7 +132,7 @@ void CVideoPlayerAudioID3::Process()
     if (MSGQ_IS_ERROR(ret))
     {
       if (!m_messageQueue.ReceivedAbortRequest())
-        CLog::Log(LOGERROR, "MSGQ_IS_ERROR returned true ({})", ret);
+        CLog::Log(LOGERROR, "MSGQ_IS_ERROR returned true ({})", static_cast<int>(ret));
 
       break;
     }
diff -up xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoPlayerRadioRDS.cpp.omv~ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoPlayerRadioRDS.cpp
--- xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoPlayerRadioRDS.cpp.omv~	2023-08-16 04:03:24.537513062 +0200
+++ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoPlayerRadioRDS.cpp	2023-08-16 04:03:32.426569560 +0200
@@ -623,7 +623,7 @@ void CDVDRadioRDSData::Process()
     if (MSGQ_IS_ERROR(ret))
     {
       if (!m_messageQueue.ReceivedAbortRequest())
-        CLog::Log(LOGERROR, "MSGQ_IS_ERROR returned true ({})", ret);
+        CLog::Log(LOGERROR, "MSGQ_IS_ERROR returned true ({})", static_cast<int>(ret));
 
       break;
     }
diff -up xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoPlayerTeletext.cpp.omv~ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoPlayerTeletext.cpp
--- xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoPlayerTeletext.cpp.omv~	2023-08-16 04:12:38.049420258 +0200
+++ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoPlayerTeletext.cpp	2023-08-16 04:12:45.255559995 +0200
@@ -241,7 +241,7 @@ void CDVDTeletextData::Process()
     if (MSGQ_IS_ERROR(ret))
     {
       if (!m_messageQueue.ReceivedAbortRequest())
-        CLog::Log(LOGERROR, "MSGQ_IS_ERROR returned true ({})", ret);
+        CLog::Log(LOGERROR, "MSGQ_IS_ERROR returned true ({})", static_cast<int>(ret));
 
       break;
     }
diff -up xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoPlayerVideo.cpp.omv~ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoPlayerVideo.cpp
--- xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoPlayerVideo.cpp.omv~	2023-08-16 04:08:09.259375695 +0200
+++ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoPlayerVideo.cpp	2023-08-16 04:09:33.164459385 +0200
@@ -118,7 +118,7 @@ bool CVideoPlayerVideo::OpenStream(CDVDS
       return false;
   }
 
-  CLog::Log(LOGINFO, "Creating video codec with codec id: {}", hint.codec);
+  CLog::Log(LOGINFO, "Creating video codec with codec id: {}", static_cast<int>(hint.codec));
 
   if (m_messageQueue.IsInited())
   {
@@ -158,7 +158,7 @@ bool CVideoPlayerVideo::OpenStream(CDVDS
 
 void CVideoPlayerVideo::OpenStream(CDVDStreamInfo& hint, std::unique_ptr<CDVDVideoCodec> codec)
 {
-  CLog::Log(LOGDEBUG, "CVideoPlayerVideo::OpenStream - open stream with codec id: {}", hint.codec);
+  CLog::Log(LOGDEBUG, "CVideoPlayerVideo::OpenStream - open stream with codec id: {}", static_cast<int>(hint.codec));
 
   m_processInfo.GetVideoBufferManager().ReleasePools();
 
@@ -207,7 +207,7 @@ void CVideoPlayerVideo::OpenStream(CDVDS
 
   if (!codec)
   {
-    CLog::Log(LOGINFO, "Creating video codec with codec id: {}", hint.codec);
+    CLog::Log(LOGINFO, "Creating video codec with codec id: {}", static_cast<int>(hint.codec));
     hint.codecOptions |= CODEC_ALLOW_FALLBACK;
     codec = CDVDFactoryCodec::CreateVideoCodec(hint, m_processInfo);
     if (!codec)
@@ -341,7 +341,7 @@ void CVideoPlayerVideo::Process()
     if (MSGQ_IS_ERROR(ret))
     {
       if (!m_messageQueue.ReceivedAbortRequest())
-        CLog::Log(LOGERROR, "MSGQ_IS_ERROR returned true ({})", ret);
+        CLog::Log(LOGERROR, "MSGQ_IS_ERROR returned true ({})", static_cast<int>(ret));
 
       break;
     }
diff -up xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoRenderers/BaseRenderer.cpp.omv~ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoRenderers/BaseRenderer.cpp
--- xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoRenderers/BaseRenderer.cpp.omv~	2023-08-16 04:09:43.487701990 +0200
+++ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoRenderers/BaseRenderer.cpp	2023-08-16 04:09:51.573890057 +0200
@@ -370,7 +370,7 @@ EShaderFormat CBaseRenderer::GetShaderFo
   else if (m_format == AV_PIX_FMT_UYVY422)
     ret = SHADER_UYVY;
   else
-    CLog::Log(LOGERROR, "CBaseRenderer::GetShaderFormat - unsupported format {}", m_format);
+    CLog::Log(LOGERROR, "CBaseRenderer::GetShaderFormat - unsupported format {}", static_cast<int>(m_format));
 
   return ret;
 }
diff -up xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoRenderers/ColorManager.cpp.omv~ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoRenderers/ColorManager.cpp
--- xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoRenderers/ColorManager.cpp.omv~	2023-08-16 04:18:16.898139594 +0200
+++ xbmc-20.2-Nexus/xbmc/cores/VideoPlayer/VideoRenderers/ColorManager.cpp	2023-08-16 04:18:25.061260155 +0200
@@ -521,7 +521,7 @@ cmsToneCurve* CColorManager::CreateToneC
     break;
 
   default:
-    CLog::Log(LOGERROR, "gamma type {} not implemented", gammaType);
+    CLog::Log(LOGERROR, "gamma type {} not implemented", static_cast<int>(gammaType));
   }
 
   cmsToneCurve* result = cmsBuildTabulatedToneCurveFloat(0,
diff -up xbmc-20.2-Nexus/xbmc/dbwrappers/mysqldataset.cpp.omv~ xbmc-20.2-Nexus/xbmc/dbwrappers/mysqldataset.cpp
--- xbmc-20.2-Nexus/xbmc/dbwrappers/mysqldataset.cpp.omv~	2023-08-16 04:10:26.532683898 +0200
+++ xbmc-20.2-Nexus/xbmc/dbwrappers/mysqldataset.cpp	2023-08-16 04:10:37.488926489 +0200
@@ -1957,7 +1957,7 @@ bool MysqlDataset::query(const std::stri
           break;
         case MYSQL_TYPE_NULL:
         default:
-          CLog::Log(LOGDEBUG, "MYSQL: Unknown field type: {}", fields[i].type);
+          CLog::Log(LOGDEBUG, "MYSQL: Unknown field type: {}", static_cast<int>(fields[i].type));
           v.set_asString("");
           v.set_isNull();
           break;
diff -up xbmc-20.2-Nexus/xbmc/dialogs/GUIDialogMediaFilter.cpp.omv~ xbmc-20.2-Nexus/xbmc/dialogs/GUIDialogMediaFilter.cpp
--- xbmc-20.2-Nexus/xbmc/dialogs/GUIDialogMediaFilter.cpp.omv~	2023-08-16 03:52:24.063354808 +0200
+++ xbmc-20.2-Nexus/xbmc/dialogs/GUIDialogMediaFilter.cpp	2023-08-16 03:53:53.497124764 +0200
@@ -416,7 +416,7 @@ void CGUIDialogMediaFilter::InitializeSe
       }
     }
 
-    std::string settingId = StringUtils::Format("filter.{}.{}", filter.mediaType, filter.field);
+    std::string settingId = StringUtils::Format("filter.{}.{}", filter.mediaType, static_cast<int>(filter.field));
     if (filter.controlType == "edit")
     {
       CVariant data;
@@ -519,7 +519,7 @@ void CGUIDialogMediaFilter::InitializeSe
 
       CLog::Log(LOGWARNING,
                 "CGUIDialogMediaFilter: filter {} of media type {} with unknown control type '{}'",
-                filter.field, filter.mediaType, filter.controlType);
+                static_cast<int>(filter.field), filter.mediaType, filter.controlType);
       continue;
     }
 
@@ -531,7 +531,7 @@ void CGUIDialogMediaFilter::InitializeSe
       CLog::Log(LOGWARNING,
                 "CGUIDialogMediaFilter: failed to create filter {} of media type {} with control "
                 "type '{}'",
-                filter.field, filter.mediaType, filter.controlType);
+                static_cast<int>(filter.field), filter.mediaType, filter.controlType);
       continue;
     }
 
diff -up xbmc-20.2-Nexus/xbmc/filesystem/CurlFile.cpp.omv~ xbmc-20.2-Nexus/xbmc/filesystem/CurlFile.cpp
--- xbmc-20.2-Nexus/xbmc/filesystem/CurlFile.cpp.omv~	2023-08-16 03:40:44.529412604 +0200
+++ xbmc-20.2-Nexus/xbmc/filesystem/CurlFile.cpp	2023-08-16 03:56:35.217445273 +0200
@@ -842,7 +842,7 @@ void CCurlFile::ParseAndCorrectUrl(CURL
       m_proxyuser = s->GetString(CSettings::SETTING_NETWORK_HTTPPROXYUSERNAME);
       m_proxypassword = s->GetString(CSettings::SETTING_NETWORK_HTTPPROXYPASSWORD);
       CLog::LogFC(LOGDEBUG, LOGCURL, "<{}> Using proxy {}, type {}", url2.GetRedacted(),
-                  m_proxyhost, proxyType2CUrlProxyType[m_proxytype]);
+                  m_proxyhost, static_cast<int>(proxyType2CUrlProxyType[m_proxytype]));
     }
 
     // get username and password
@@ -1373,7 +1373,7 @@ bool CCurlFile::Exists(const CURL& url)
   else if (result != CURLE_REMOTE_FILE_NOT_FOUND && result != CURLE_FTP_COULDNT_RETR_FILE)
   {
     CLog::Log(LOGERROR, "CCurlFile::{} - <{}> Failed: {}({})", __FUNCTION__, url.GetRedacted(),
-              g_curlInterface.easy_strerror(result), result);
+              g_curlInterface.easy_strerror(result), static_cast<int>(result));
   }
 
   errno = ENOENT;
@@ -1570,7 +1570,7 @@ int CCurlFile::Stat(const CURL& url, str
     g_curlInterface.easy_release(&m_state->m_easyHandle, NULL);
     errno = ENOENT;
     CLog::Log(LOGERROR, "CCurlFile::{} - <{}> Failed: {}({})", __FUNCTION__, url.GetRedacted(),
-              g_curlInterface.easy_strerror(result), result);
+              g_curlInterface.easy_strerror(result), static_cast<int>(result));
     return -1;
   }
 
@@ -1582,7 +1582,7 @@ int CCurlFile::Stat(const CURL& url, str
     {
       g_curlInterface.easy_release(&m_state->m_easyHandle, NULL);
       CLog::Log(LOGINFO, "CCurlFile::{} - <{}> Content length failed: {}({})", __FUNCTION__,
-                url.GetRedacted(), g_curlInterface.easy_strerror(result), result);
+                url.GetRedacted(), g_curlInterface.easy_strerror(result), static_cast<int>(result));
       errno = ENOENT;
       return -1;
     }
@@ -1614,7 +1614,7 @@ int CCurlFile::Stat(const CURL& url, str
     if (result != CURLE_OK)
     {
       CLog::Log(LOGINFO, "CCurlFile::{} - <{}> Filetime failed: {}({})", __FUNCTION__,
-                url.GetRedacted(), g_curlInterface.easy_strerror(result), result);
+                url.GetRedacted(), g_curlInterface.easy_strerror(result), static_cast<int>(result));
     }
     else
     {
@@ -1728,7 +1728,7 @@ int8_t CCurlFile::CReadState::FillBuffer
             {
               CLog::Log(LOGERROR, "CCurlFile::CReadState::{} - ({}) Failed: {}({})", __FUNCTION__,
                         fmt::ptr(this), g_curlInterface.easy_strerror(msg->data.result),
-                        msg->data.result);
+                        static_cast<int>(msg->data.result));
             }
 
             if ( (msg->data.result == CURLE_OPERATION_TIMEDOUT ||
@@ -1886,7 +1886,7 @@ int8_t CCurlFile::CReadState::FillBuffer
       {
         CLog::Log(LOGERROR,
                   "CCurlFile::CReadState::{} - ({}) Multi perform failed with code {}, aborting",
-                  __FUNCTION__, fmt::ptr(this), result);
+                  __FUNCTION__, fmt::ptr(this), static_cast<int>(result));
         return FILLBUFFER_FAIL;
       }
       break;
@@ -1935,7 +1935,7 @@ std::string CCurlFile::GetInfoString(int
   {
     CLog::Log(LOGERROR,
               "CCurlFile::{} - <{}> Info string request for type {} failed with result code {}",
-              __FUNCTION__, CURL::GetRedacted(m_url), infoType, result);
+              __FUNCTION__, CURL::GetRedacted(m_url), infoType, static_cast<int>(result));
     return "";
   }
   return (info ? info : "");
diff -up xbmc-20.2-Nexus/xbmc/games/addons/streams/GameClientStreamVideo.cpp.omv~ xbmc-20.2-Nexus/xbmc/games/addons/streams/GameClientStreamVideo.cpp
--- xbmc-20.2-Nexus/xbmc/games/addons/streams/GameClientStreamVideo.cpp.omv~	2023-08-16 03:41:29.924092873 +0200
+++ xbmc-20.2-Nexus/xbmc/games/addons/streams/GameClientStreamVideo.cpp	2023-08-16 03:41:37.855208307 +0200
@@ -70,7 +70,7 @@ RETRO::VideoStreamProperties* CGameClien
   const AVPixelFormat pixelFormat = CGameClientTranslator::TranslatePixelFormat(properties.format);
   if (pixelFormat == AV_PIX_FMT_NONE)
   {
-    CLog::Log(LOGERROR, "GAME: Unknown pixel format: {}", properties.format);
+    CLog::Log(LOGERROR, "GAME: Unknown pixel format: {}", static_cast<int>(properties.format));
     return nullptr;
   }
 
diff -up xbmc-20.2-Nexus/xbmc/guilib/GUIColorButtonControl.cpp.omv~ xbmc-20.2-Nexus/xbmc/guilib/GUIColorButtonControl.cpp
--- xbmc-20.2-Nexus/xbmc/guilib/GUIColorButtonControl.cpp.omv~	2023-08-16 03:56:54.476597376 +0200
+++ xbmc-20.2-Nexus/xbmc/guilib/GUIColorButtonControl.cpp	2023-08-16 03:57:14.625755482 +0200
@@ -188,7 +188,7 @@ void CGUIColorButtonControl::RenderInfoT
 void CGUIColorButtonControl::ProcessInfoText(unsigned int currentTime)
 {
   CRect labelRenderRect = m_labelInfo.GetRenderRect();
-  bool changed = m_labelInfo.SetText(StringUtils::Format("#{:08X}", m_imgBoxColor));
+  bool changed = m_labelInfo.SetText(StringUtils::Format("#{:08X}", static_cast<int>(m_imgBoxColor)));
   // Set Label X position based on image mask control position
   float textWidth = m_labelInfo.GetTextWidth() + 2 * m_labelInfo.GetLabelInfo().offsetX;
   float textPosX = m_imgColorMask->GetXPosition() - textWidth;
diff -up xbmc-20.2-Nexus/xbmc/guilib/GUIListGroup.cpp.omv~ xbmc-20.2-Nexus/xbmc/guilib/GUIListGroup.cpp
--- xbmc-20.2-Nexus/xbmc/guilib/GUIListGroup.cpp.omv~	2023-08-16 04:11:07.417574805 +0200
+++ xbmc-20.2-Nexus/xbmc/guilib/GUIListGroup.cpp	2023-08-16 04:11:16.182760825 +0200
@@ -55,7 +55,7 @@ void CGUIListGroup::AddControl(CGUIContr
   if (control)
   {
     if (supportedTypes.find(control->GetControlType()) == supportedTypes.end())
-      CLog::Log(LOGWARNING, "Trying to add unsupported control type {}", control->GetControlType());
+      CLog::Log(LOGWARNING, "Trying to add unsupported control type {}", static_cast<int>(control->GetControlType()));
   }
   CGUIControlGroup::AddControl(control, position);
 }
diff -up xbmc-20.2-Nexus/xbmc/input/KeyboardStat.cpp.omv~ xbmc-20.2-Nexus/xbmc/input/KeyboardStat.cpp
--- xbmc-20.2-Nexus/xbmc/input/KeyboardStat.cpp.omv~	2023-08-16 04:11:56.407593225 +0200
+++ xbmc-20.2-Nexus/xbmc/input/KeyboardStat.cpp	2023-08-16 04:12:29.587254915 +0200
@@ -92,7 +92,7 @@ CKey CKeyboardStat::TranslateKey(XBMC_ke
 
   CLog::Log(LOGDEBUG,
             "Keyboard: scancode: {:#02x}, sym: {:#04x}, unicode: {:#04x}, modifier: 0x{:x}",
-            keysym.scancode, keysym.sym, keysym.unicode, keysym.mod);
+            static_cast<int>(keysym.scancode), static_cast<int>(keysym.sym), keysym.unicode, static_cast<int>(keysym.mod));
 
   // The keysym.unicode is usually valid, even if it is zero. A zero
   // unicode just means this is a non-printing keypress. The ascii and
diff -up xbmc-20.2-Nexus/xbmc/network/websocket/WebSocket.cpp.omv~ xbmc-20.2-Nexus/xbmc/network/websocket/WebSocket.cpp
--- xbmc-20.2-Nexus/xbmc/network/websocket/WebSocket.cpp.omv~	2023-08-16 03:43:03.233392082 +0200
+++ xbmc-20.2-Nexus/xbmc/network/websocket/WebSocket.cpp	2023-08-16 04:14:38.527638512 +0200
@@ -50,13 +50,13 @@ CWebSocketFrame::CWebSocketFrame(const c
   m_opcode = (WebSocketFrameOpcode)(m_data[0] & MASK_OPCODE);
   if (m_opcode >= WebSocketUnknownFrame)
   {
-    CLog::Log(LOGINFO, "WebSocket: Frame with invalid opcode {:2X} received", m_opcode);
+    CLog::Log(LOGINFO, "WebSocket: Frame with invalid opcode {:2X} received", static_cast<int>(m_opcode));
     reset();
     return;
   }
   if ((m_opcode & CONTROL_FRAME) == CONTROL_FRAME && !m_final)
   {
-    CLog::Log(LOGINFO, "WebSocket: Fragmented control frame (opcode {:2X}) received", m_opcode);
+    CLog::Log(LOGINFO, "WebSocket: Fragmented control frame (opcode {:2X}) received", static_cast<int>(m_opcode));
     reset();
     return;
   }
diff -up xbmc-20.2-Nexus/xbmc/platform/linux/input/LibInputTouch.cpp.omv~ xbmc-20.2-Nexus/xbmc/platform/linux/input/LibInputTouch.cpp
--- xbmc-20.2-Nexus/xbmc/platform/linux/input/LibInputTouch.cpp.omv~	2023-08-16 04:10:47.590147621 +0200
+++ xbmc-20.2-Nexus/xbmc/platform/linux/input/LibInputTouch.cpp	2023-08-16 04:10:57.560363553 +0200
@@ -100,7 +100,7 @@ void CLibInputTouch::ProcessTouchFrame(l
   for (size_t slot = 0; slot < m_points.size(); ++slot)
   {
     CLog::Log(LOGDEBUG, "CLibInputTouch::{} - touch input frame: event {}", __FUNCTION__,
-              GetEvent(slot));
+              static_cast<int>(GetEvent(slot)));
     CLog::Log(LOGDEBUG, "CLibInputTouch::{} - touch input frame: slot {}", __FUNCTION__, slot);
     CGenericTouchInputHandler::GetInstance().HandleTouchInput(GetEvent(slot), GetX(slot), GetY(slot), nanotime, slot);
     SetEvent(slot, TouchInputUnchanged);
diff -up xbmc-20.2-Nexus/xbmc/pvr/PVREdl.cpp.omv~ xbmc-20.2-Nexus/xbmc/pvr/PVREdl.cpp
--- xbmc-20.2-Nexus/xbmc/pvr/PVREdl.cpp.omv~	2023-08-16 04:19:12.216944481 +0200
+++ xbmc-20.2-Nexus/xbmc/pvr/PVREdl.cpp	2023-08-16 04:19:20.696065430 +0200
@@ -56,7 +56,7 @@ std::vector<EDL::Edit> CPVREdl::GetEdits
       edit.action = EDL::Action::COMM_BREAK;
       break;
     default:
-      CLog::LogF(LOGWARNING, "Ignoring entry of unknown EDL type: {}", entry.type);
+      CLog::LogF(LOGWARNING, "Ignoring entry of unknown EDL type: {}", static_cast<int>(entry.type));
       continue;
     }
 
diff -up xbmc-20.2-Nexus/xbmc/pvr/addons/PVRClient.cpp.omv~ xbmc-20.2-Nexus/xbmc/pvr/addons/PVRClient.cpp
--- xbmc-20.2-Nexus/xbmc/pvr/addons/PVRClient.cpp.omv~	2023-08-16 03:45:17.553065872 +0200
+++ xbmc-20.2-Nexus/xbmc/pvr/addons/PVRClient.cpp	2023-08-16 03:45:34.056257910 +0200
@@ -1910,7 +1910,7 @@ void CPVRClient::cb_connection_state_cha
 
     CLog::LogFC(LOGDEBUG, LOGPVR,
                 "State for connection '{}' on client '{}' changed from '{}' to '{}'",
-                strConnectionString, client->ID(), prevState, newState);
+                strConnectionString, client->ID(), static_cast<int>(prevState), static_cast<int>(newState));
 
     client->SetConnectionState(newState);
 
diff -up xbmc-20.2-Nexus/xbmc/pvr/addons/PVRClientMenuHooks.cpp.omv~ xbmc-20.2-Nexus/xbmc/pvr/addons/PVRClientMenuHooks.cpp
--- xbmc-20.2-Nexus/xbmc/pvr/addons/PVRClientMenuHooks.cpp.omv~	2023-08-16 04:17:33.071481033 +0200
+++ xbmc-20.2-Nexus/xbmc/pvr/addons/PVRClientMenuHooks.cpp	2023-08-16 04:17:39.419577635 +0200
@@ -28,7 +28,7 @@ CPVRClientMenuHook::CPVRClientMenuHook(c
       hook.category != PVR_MENUHOOK_RECORDING &&
       hook.category != PVR_MENUHOOK_DELETED_RECORDING &&
       hook.category != PVR_MENUHOOK_SETTING)
-    CLog::LogF(LOGERROR, "Unknown PVR_MENUHOOK_CAT value: {}", hook.category);
+    CLog::LogF(LOGERROR, "Unknown PVR_MENUHOOK_CAT value: {}", static_cast<int>(hook.category));
 }
 
 bool CPVRClientMenuHook::operator ==(const CPVRClientMenuHook& right) const
diff -up xbmc-20.2-Nexus/xbmc/pvr/addons/PVRClients.cpp.omv~ xbmc-20.2-Nexus/xbmc/pvr/addons/PVRClients.cpp
--- xbmc-20.2-Nexus/xbmc/pvr/addons/PVRClients.cpp.omv~	2023-08-16 03:47:40.521646994 +0200
+++ xbmc-20.2-Nexus/xbmc/pvr/addons/PVRClients.cpp	2023-08-16 03:47:49.485740438 +0200
@@ -166,7 +166,7 @@ void CPVRClients::UpdateClients(
 
       if (status != ADDON_STATUS_OK)
       {
-        CLog::LogF(LOGERROR, "Failed to create add-on {}, status = {}", client->ID(), status);
+        CLog::LogF(LOGERROR, "Failed to create add-on {}, status = {}", client->ID(), static_cast<int>(status));
         if (status == ADDON_STATUS_PERMANENT_FAILURE)
         {
           CServiceBroker::GetAddonMgr().DisableAddon(client->ID(),
diff -up xbmc-20.2-Nexus/xbmc/pvr/epg/Epg.cpp.omv~ xbmc-20.2-Nexus/xbmc/pvr/epg/Epg.cpp
--- xbmc-20.2-Nexus/xbmc/pvr/epg/Epg.cpp.omv~	2023-08-16 03:48:07.756929042 +0200
+++ xbmc-20.2-Nexus/xbmc/pvr/epg/Epg.cpp	2023-08-16 03:48:15.118004339 +0200
@@ -235,7 +235,7 @@ bool CPVREpg::UpdateEntry(const std::sha
   }
   else
   {
-    CLog::LogF(LOGERROR, "Unknown epg event state value: {}", newState);
+    CLog::LogF(LOGERROR, "Unknown epg event state value: {}", static_cast<int>(newState));
     bRet = false;
   }
 
diff -up xbmc-20.2-Nexus/xbmc/settings/windows/GUIWindowSettingsScreenCalibration.cpp.omv~ xbmc-20.2-Nexus/xbmc/settings/windows/GUIWindowSettingsScreenCalibration.cpp
--- xbmc-20.2-Nexus/xbmc/settings/windows/GUIWindowSettingsScreenCalibration.cpp.omv~	2023-08-16 03:54:50.473599558 +0200
+++ xbmc-20.2-Nexus/xbmc/settings/windows/GUIWindowSettingsScreenCalibration.cpp	2023-08-16 03:55:12.040776421 +0200
@@ -279,7 +279,7 @@ unsigned int CGUIWindowSettingsScreenCal
       return i;
   }
   CLog::Log(LOGERROR, "CALIBRATION: Reported current resolution: {}",
-            CServiceBroker::GetWinSystem()->GetGfxContext().GetVideoResolution());
+            static_cast<int>(CServiceBroker::GetWinSystem()->GetGfxContext().GetVideoResolution()));
   CLog::Log(LOGERROR,
             "CALIBRATION: Could not determine current resolution, falling back to default");
   return 0;
diff -up xbmc-20.2-Nexus/xbmc/utils/DatabaseUtils.cpp.omv~ xbmc-20.2-Nexus/xbmc/utils/DatabaseUtils.cpp
--- xbmc-20.2-Nexus/xbmc/utils/DatabaseUtils.cpp.omv~	2023-08-16 03:57:34.191908046 +0200
+++ xbmc-20.2-Nexus/xbmc/utils/DatabaseUtils.cpp	2023-08-16 03:57:42.867975401 +0200
@@ -372,7 +372,7 @@ bool DatabaseUtils::GetSelectFields(cons
 
     if (GetField(*it, mediaType, DatabaseQueryPartSelect).empty())
     {
-      CLog::Log(LOGDEBUG, "DatabaseUtils::GetSortFieldList: unknown field {}", *it);
+      CLog::Log(LOGDEBUG, "DatabaseUtils::GetSortFieldList: unknown field {}", static_cast<int>(*it));
       continue;
     }
     selectFields.push_back(*it);
diff -up xbmc-20.2-Nexus/xbmc/video/VideoInfoScanner.cpp.omv~ xbmc-20.2-Nexus/xbmc/video/VideoInfoScanner.cpp
--- xbmc-20.2-Nexus/xbmc/video/VideoInfoScanner.cpp.omv~	2023-08-16 03:58:47.388470929 +0200
+++ xbmc-20.2-Nexus/xbmc/video/VideoInfoScanner.cpp	2023-08-16 04:02:49.574261750 +0200
@@ -470,7 +470,7 @@ namespace VIDEO
         ret = RetrieveInfoForMusicVideo(pItem.get(), bDirNames, info2, useLocal, pURL, pDlgProgress);
       else
       {
-        CLog::Log(LOGERROR, "VideoInfoScanner: Unknown content type {} ({})", info2->Content(),
+        CLog::Log(LOGERROR, "VideoInfoScanner: Unknown content type {} ({})", static_cast<int>(info2->Content()),
                   CURL::GetRedacted(pItem->GetPath()));
         FoundSomeInfo = false;
         break;
@@ -480,7 +480,7 @@ namespace VIDEO
         CLog::Log(LOGWARNING,
                   "VideoInfoScanner: Error {} occurred while retrieving"
                   "information for {}.",
-                  ret, CURL::GetRedacted(pItem->GetPath()));
+                  static_cast<int>(ret), CURL::GetRedacted(pItem->GetPath()));
         FoundSomeInfo = false;
         break;
       }
diff -up xbmc-20.2-Nexus/xbmc/windowing/GraphicContext.cpp.omv~ xbmc-20.2-Nexus/xbmc/windowing/GraphicContext.cpp
--- xbmc-20.2-Nexus/xbmc/windowing/GraphicContext.cpp.omv~	2023-08-16 03:58:14.386218616 +0200
+++ xbmc-20.2-Nexus/xbmc/windowing/GraphicContext.cpp	2023-08-16 03:58:21.421272598 +0200
@@ -493,7 +493,7 @@ void CGraphicContext::ApplyVideoResoluti
   if (!IsValidResolution(res))
   {
     CLog::LogF(LOGWARNING, "Asked to apply invalid resolution {}, falling back to RES_DESKTOP",
-               res);
+               static_cast<int>(res));
     res = RES_DESKTOP;
   }
 
diff -up xbmc-20.2-Nexus/xbmc/windowing/Resolution.cpp.omv~ xbmc-20.2-Nexus/xbmc/windowing/Resolution.cpp
--- xbmc-20.2-Nexus/xbmc/windowing/Resolution.cpp.omv~	2023-08-16 04:13:27.974369097 +0200
+++ xbmc-20.2-Nexus/xbmc/windowing/Resolution.cpp	2023-08-16 04:16:45.809748093 +0200
@@ -82,7 +82,7 @@ RESOLUTION CResolutionUtils::ChooseBestR
   }
 
   CLog::Log(LOGINFO, "Display resolution ADJUST : {} ({}) (weight: {:.3f})",
-            CServiceBroker::GetWinSystem()->GetGfxContext().GetResInfo(res).strMode, res, weight);
+            CServiceBroker::GetWinSystem()->GetGfxContext().GetResInfo(res).strMode, static_cast<int>(res), weight);
   return res;
 }
 
@@ -143,7 +143,7 @@ void CResolutionUtils::FindResolutionFro
     {
       CLog::Log(LOGDEBUG,
                 "[WHITELIST] Matched an exact resolution with an exact refresh rate {} ({})",
-                info.strMode, i);
+                info.strMode, static_cast<int>(i));
       unsigned int pen = abs(info.iScreenHeight - height) + abs(info.iScreenWidth - width);
       if (pen < penalty)
       {
@@ -177,7 +177,7 @@ void CResolutionUtils::FindResolutionFro
       {
         CLog::Log(LOGDEBUG,
                   "[WHITELIST] Matched an exact resolution with double the refresh rate {} ({})",
-                  info.strMode, i);
+                  info.strMode, static_cast<int>(i));
         unsigned int pen = abs(info.iScreenHeight - height) + abs(info.iScreenWidth - width);
         if (pen < penalty)
         {
@@ -217,7 +217,7 @@ void CResolutionUtils::FindResolutionFro
         CLog::Log(
             LOGDEBUG,
             "[WHITELIST] Matched an exact resolution with a 3:2 pulldown refresh rate {} ({})",
-            info.strMode, i);
+            info.strMode, static_cast<int>(i));
         unsigned int pen = abs(info.iScreenHeight - height) + abs(info.iScreenWidth - width);
         if (pen < penalty)
         {
@@ -250,7 +250,7 @@ void CResolutionUtils::FindResolutionFro
     {
       CLog::Log(LOGDEBUG,
                 "[WHITELIST] Matched a desktop resolution with an exact refresh rate {} ({})",
-                info.strMode, i);
+                info.strMode, static_cast<int>(i));
       resolution = i;
       return;
     }
@@ -277,7 +277,7 @@ void CResolutionUtils::FindResolutionFro
       {
         CLog::Log(LOGDEBUG,
                   "[WHITELIST] Matched a desktop resolution with double the refresh rate {} ({})",
-                  info.strMode, i);
+                  info.strMode, static_cast<int>(i));
         resolution = i;
         return;
       }
@@ -307,7 +307,7 @@ void CResolutionUtils::FindResolutionFro
         CLog::Log(
             LOGDEBUG,
             "[WHITELIST] Matched a desktop resolution with a 3:2 pulldown refresh rate {} ({})",
-            info.strMode, i);
+            info.strMode, static_cast<int>(i));
         resolution = i;
         return;
       }
@@ -354,14 +354,14 @@ bool CResolutionUtils::FindResolutionFro
             CLog::Log(
                 LOGDEBUG,
                 "Found Resolution {} ({}) from fallback (refreshmin:{:.3f} refreshmax:{:.3f})",
-                info.strMode, resolution, override.refreshmin, override.refreshmax);
+                info.strMode, static_cast<int>(resolution), override.refreshmin, override.refreshmax);
           }
           else
           {
             CLog::Log(LOGDEBUG,
                       "Found Resolution {} ({}) from override of fps {:.3f} (fpsmin:{:.3f} "
                       "fpsmax:{:.3f} refreshmin:{:.3f} refreshmax:{:.3f})",
-                      info.strMode, resolution, fps, override.fpsmin, override.fpsmax,
+                      info.strMode,static_cast<int>(resolution), fps, override.fpsmin, override.fpsmax,
                       override.refreshmin, override.refreshmax);
           }
 
diff -up xbmc-20.2-Nexus/xbmc/windowing/wayland/WinSystemWayland.cpp.omv~ xbmc-20.2-Nexus/xbmc/windowing/wayland/WinSystemWayland.cpp
--- xbmc-20.2-Nexus/xbmc/windowing/wayland/WinSystemWayland.cpp.omv~	2023-08-16 03:39:30.787230315 +0200
+++ xbmc-20.2-Nexus/xbmc/windowing/wayland/WinSystemWayland.cpp	2023-08-16 03:40:21.126048207 +0200
@@ -912,7 +912,7 @@ void CWinSystemWayland::SetResolutionInt
       dynamic_cast<CWinEventsWayland&>(*m_winEvents).MessagePush(&msg);
       m_waitingForApply = true;
       CLog::LogF(LOGDEBUG, "Queued change to resolution {} surface size {}x{} scale {} state {}",
-                 res, sizes.surfaceSize.Width(), sizes.surfaceSize.Height(), scale,
+                 static_cast<int>(res), sizes.surfaceSize.Width(), sizes.surfaceSize.Height(), scale,
                  IShellSurface::StateToString(state));
     }
   }
diff -up xbmc-20.2-Nexus/xbmc/windows/GUIWindowHome.cpp.omv~ xbmc-20.2-Nexus/xbmc/windows/GUIWindowHome.cpp
--- xbmc-20.2-Nexus/xbmc/windows/GUIWindowHome.cpp.omv~	2023-08-16 04:07:29.878322760 +0200
+++ xbmc-20.2-Nexus/xbmc/windows/GUIWindowHome.cpp	2023-08-16 04:07:39.362581048 +0200
@@ -78,7 +78,7 @@ void CGUIWindowHome::Announce(ANNOUNCEME
 {
   int ra_flag = 0;
 
-  CLog::Log(LOGDEBUG, LOGANNOUNCE, "GOT ANNOUNCEMENT, type: {}, from {}, message {}", flag, sender, message);
+  CLog::Log(LOGDEBUG, LOGANNOUNCE, "GOT ANNOUNCEMENT, type: {}, from {}, message {}", static_cast<int>(flag), sender, message);
 
   // we are only interested in library changes
   if ((flag & (ANNOUNCEMENT::VideoLibrary | ANNOUNCEMENT::AudioLibrary)) == 0)
